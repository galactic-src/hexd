{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/hex.js","webpack:///./src/js/dom.js","webpack:///./src/js/controls.js","webpack:///./src/js/draw.js","webpack:///./src/js/state.js","webpack:///./src/js/import.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SQRT3","Math","sqrt","calcHexHeight","edgeLength","calcHexWidth","adjustHexCentre","x","y","edge","canvasWidth","canvasHeight","adjustX","adjustY","hexWidth","hexHeight","domReferences","undefined","dom","rounded","scalar","round","getEdgeLength","parseFloat","control","setEdgeLength","getXOffset","xCentre","setXOffset","xOffset","getYOffset","yCentre","setYOffset","yOffset","getEdgeLocked","edgeLocked","checked","getCanvasHeight","image","output","height","getCanvasWidth","width","resetCtx","ctx","globalAlpha","globalCompositeOperation","lineWidth","strokeStyle","redraw","outputCanvas","clear","copyImageToCanvas","cropHex","drawImage","hiddenImage","clearRect","canvas","hexCentreX","hexCentreY","hexTop","hexBottom","hexRight","hexLeft","clipTop","max","clipBottom","min","clipHeight","clipLeft","clipRight","fillRect","beginPath","moveTo","lineTo","closePath","fill","drawHexOutline","initialX","initialY","halfHexWidth","halfHexHeight","quarterHexHeight","stroke","loadImage","file","document","body","removeChild","img","createElement","id","origin","src","URL","createObjectURL","style","onload","getElementById","background","this","naturalWidth","naturalHeight","backgroundCanvas","setDefaultHex","appendChild","lengthFromWidth","lengthFromHeight","scaleCentreX","scaleCentreY","onXChanged","newXOffset","newHexRight","onYChanged","newYOffset","newHexBottom","onEdgeChanged","newEdge","cappedEdge","window","getContext","updateBackgroundReference","updateOutputReference","fileSelector","exportButton","dropzone","exportCanvas","export","setupExportCanvas","addEventListener","clientX","clientY","left","top","getBoundingClientRect","mouseX","mouseY","e","preventDefault","newEdgeLength","deltaY","visibility","dataTransfer","dropEffect","selectedFile","stopPropagation","files","target","exporter","alert","href","toDataURL","handleDownload"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const SQRT3 = Math.sqrt(3);\n\nexport const calcHexHeight = (edgeLength) => edgeLength * 2;\nexport const calcHexWidth = (edgeLength) => edgeLength * SQRT3;\n\nexport const adjustHexCentre = (x, y, edge, canvasWidth, canvasHeight) => {\n    return {\n        x: adjustX(x, edge, canvasWidth),\n        y: adjustY(y, edge, canvasHeight)\n    }\n}\n\nconst adjustX = (x, edge, canvasWidth) => {\n    const hexWidth = calcHexWidth(edge);\n\n    if (x + hexWidth / 2 > canvasWidth) {\n        return canvasWidth - hexWidth / 2;\n    } else if (x - hexWidth / 2 < 0) {\n        return hexWidth / 2;\n    } else {\n        return x;\n    }\n}\n\nconst adjustY = (y, edge, canvasHeight) => {\n    const hexHeight = calcHexHeight(edge);\n\n    if (y + hexHeight / 2 > canvasHeight) {\n        return canvasHeight - hexHeight / 2;\n    } else if (y - hexHeight / 2 < 0) {\n        return hexHeight / 2;\n    } else {\n        return y\n    }\n}","const domReferences = {\n    \"image\": {\n        \"background\": undefined,\n        \"backgroundCanvas\": undefined,\n        \"output\": undefined,\n        \"outputCanvas\": undefined,\n        \"hiddenImage\": undefined,\n        \"export\": undefined,\n        \"exportCanvas\": undefined\n    },\n    \"control\": {\n        \"xCentre\": undefined,\n        \"yCentre\": undefined,\n        \"edge\": undefined,\n        \"edgeLocked\": undefined,\n        \"fileSelector\": undefined,\n        \"exportButton\": undefined\n    },\n    \"dropzone\": undefined\n}\n\nexport const setupExportCanvas = () => {\n    const exportCanvas = document.createElement('canvas');\n    domReferences.image.export = exportCanvas;\n    domReferences.image.exportCanvas = exportCanvas.getContext('2d');\n}\n\nexport const updateBackgroundReference = () => {\n    const background = document.getElementById('background');\n    domReferences.image.background = background;\n    domReferences.image.backgroundCanvas = background.getContext(\"2d\");\n}\n\nexport const updateOutputReference = () => {\n    const output = document.getElementById('output');\n    domReferences.image.output = output;\n    domReferences.image.outputCanvas = output.getContext(\"2d\");\n}\n\nexport const updatePositionReferences = () => {\n    domReferences.control.xCentre = document.getElementById('x');\n    domReferences.control.yCentre = document.getElementById('y');\n}\n\nexport const updateEdgeReference = () => {\n    domReferences.control.edge = document.getElementById('edge');\n}\n\nexport const updateFileSelectorReference = () => {\n    domReferences.control.fileSelector = document.getElementById('fileSelector');\n}\n\nexport const updateExportButtonReference = () => {\n    domReferences.control.exportButton = document.getElementById('export');\n}\n\nexport const updateEdgeLockedReference = () => {\n    domReferences.control.edgeLocked = document.getElementById('edgeLocked');\n}\n\nexport const updateHiddenImageReference = () => {\n    domReferences.image.hiddenImage = document.getElementById('hiddenImage');\n}\n\nexport const updateDropzoneReference = () => {\n    domReferences.dropzone = document.getElementById('dropzone');\n}\n\nexport default domReferences;","import dom from './dom'\n\nconst rounded = (scalar) => Math.round(scalar * 100) / 100;\n\nexport const getEdgeLength = () => parseFloat(dom.control.edge.value);\nexport const setEdgeLength = edgeLength => dom.control.edge.value = rounded(edgeLength);\nexport const getXOffset = () => parseFloat(dom.control.xCentre.value);\nexport const setXOffset = xOffset => dom.control.xCentre.value = rounded(xOffset);\nexport const getYOffset = () => parseFloat(dom.control.yCentre.value);\nexport const setYOffset = yOffset => dom.control.yCentre.value = rounded(yOffset);\nexport const getEdgeLocked = () => dom.control.edgeLocked.checked;\n\nexport const getCanvasHeight = () => parseFloat(dom.image.output.height);\nexport const getCanvasWidth = () => parseFloat(dom.image.output.width);","import { getEdgeLength, getXOffset, getYOffset, getCanvasHeight, getCanvasWidth } from './controls'\nimport { calcHexWidth, calcHexHeight, adjustHexCentre } from './hex'\nimport dom from './dom'\n\nexport const resetCtx = (ctx) => {\n    ctx.globalAlpha = 1.0;\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = \"#FFFFFF\";\n}\n\nexport const redraw = () => {\n    const ctx = dom.image.outputCanvas;\n    if (getEdgeLength() === 0) {\n        clear(ctx);\n    } else {\n        copyImageToCanvas(ctx);\n        cropHex(ctx);\n    }\n}\n\nconst copyImageToCanvas = ctx => {\n    resetCtx(ctx);\n    ctx.drawImage(dom.image.hiddenImage, 0, 0);\n}\n\nconst clear = ctx => {\n    resetCtx(ctx);\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nconst cropHex = ctx => {\n    const edge = getEdgeLength();\n    const hexCentreX = getXOffset();\n    const hexCentreY = getYOffset();\n\n    const hexWidth = calcHexWidth(edge);\n    const hexHeight = calcHexHeight(edge);\n\n    const hexTop = hexCentreY - hexHeight / 2;\n    const hexBottom = hexCentreY + hexHeight / 2;\n    const hexRight = hexCentreX + hexWidth / 2;\n    const hexLeft = hexCentreX - hexWidth / 2;\n\n    resetCtx(ctx);\n    ctx.globalCompositeOperation = 'destination-out';\n\n    const clipTop = Math.max(hexTop - 1, 0);\n    const clipBottom = Math.min(hexBottom + 1, ctx.canvas.height);\n    const clipHeight = clipBottom - clipTop;\n    const clipLeft = Math.max(hexLeft - 1, 0);\n    const clipRight = Math.min(hexRight + 1, ctx.canvas.width);\n\n    if (hexTop > 0) {\n        ctx.fillRect(0, 0, ctx.canvas.width, hexTop);\n    }\n    if (hexBottom < ctx.canvas.height) {\n        ctx.fillRect(0, hexBottom, ctx.canvas.width, ctx.canvas.height - hexBottom);\n    }\n    if (hexLeft > 0) {\n        ctx.fillRect(0, clipTop, hexLeft, clipHeight);\n    }\n    if (hexRight < ctx.canvas.width) {\n        ctx.fillRect(hexRight, clipTop, ctx.canvas.width - hexRight, clipHeight);\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(clipLeft, clipTop);\n    ctx.lineTo(clipLeft, hexTop + edge * 0.5 + 1);\n    ctx.lineTo(hexLeft, hexTop + edge * 0.5);\n    ctx.lineTo(hexCentreX, hexTop);\n    ctx.lineTo(hexRight, hexTop + edge * 0.5);\n    ctx.lineTo(clipRight, hexTop + edge * 0.5 + 1);\n    ctx.lineTo(clipRight, clipTop);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(clipLeft, clipBottom);\n    ctx.lineTo(clipLeft, hexBottom - edge * 0.5 - 1);\n    ctx.lineTo(hexLeft, hexBottom - edge * 0.5);\n    ctx.lineTo(hexCentreX, hexBottom);\n    ctx.lineTo(hexRight, hexBottom - edge * 0.5);\n    ctx.lineTo(clipRight, hexBottom - edge * 0.5 - 1);\n    ctx.lineTo(clipRight, clipBottom);\n    ctx.closePath();\n    ctx.fill();\n}\n\nexport const drawHexOutline = (ctx, initialX, initialY) => {\n    const edge = getEdgeLength();\n    const canvasHeight = getCanvasHeight();\n    const canvasWidth = getCanvasWidth();\n\n    const halfHexWidth = calcHexWidth(edge) / 2;\n    const halfHexHeight = calcHexHeight(edge) / 2;\n    const quarterHexHeight = halfHexHeight / 2;\n\n    const { x, y } = adjustHexCentre(initialX, initialY, edge, canvasWidth, canvasHeight);\n\n    resetCtx(ctx);\n    ctx.beginPath();\n    ctx.moveTo(x - halfHexWidth, y - quarterHexHeight);\n    ctx.lineTo(x - halfHexWidth, y + quarterHexHeight);\n    ctx.lineTo(x, y + halfHexHeight);\n    ctx.lineTo(x + halfHexWidth, y + quarterHexHeight);\n    ctx.lineTo(x + halfHexWidth, y - quarterHexHeight);\n    ctx.lineTo(x, y - halfHexHeight);\n    ctx.closePath();\n    ctx.stroke();\n}","const state = {\n    \"scaleCentreX\": 0,\n    \"scaleCentreY\": 0\n}\n\nexport default state","import { setEdgeLength, setXOffset, setYOffset } from './controls'\nimport dom, { updateHiddenImageReference } from './dom'\nimport { resetCtx, redraw } from './draw'\nimport { SQRT3 } from './hex'\nimport state from './state'\n\nexport const onFileDropped = selectedFile => loadImage(selectedFile);\n\nexport const onFileSelected = selectedFile => {\n    if (selectedFile === undefined) {\n        return;\n    }\n\n    loadImage(selectedFile);\n}\n\nconst loadImage = file => {\n    if (dom.image.hiddenImage !== undefined) {\n        document.body.removeChild(dom.image.hiddenImage);\n    }\n\n    const img = document.createElement('img');\n    img.id = 'hiddenImage';\n    img.origin = 'anonymous';\n    img.src = URL.createObjectURL(file);\n    img.style = \"position:absolute; top: -9999px; left: -9999px;\";\n    img.onload = function() {\n        updateHiddenImageReference();\n        dom.image.output.width = dom.image.background.width = this.naturalWidth;\n        dom.image.output.height = dom.image.background.height = this.naturalHeight;\n\n        resetCtx(dom.image.backgroundCanvas);\n        dom.image.backgroundCanvas.globalAlpha = 0.3;\n        dom.image.backgroundCanvas.drawImage(dom.image.hiddenImage, 0, 0);\n\n        setDefaultHex(dom.image.outputCanvas);\n\n        redraw();\n    };\n\n    document.body.appendChild(img);\n}\n\nconst setDefaultHex = ctx => {\n    const lengthFromWidth = dom.image.output.width / SQRT3;\n    const lengthFromHeight = dom.image.output.height / 2;\n    const edge = Math.min(lengthFromWidth, lengthFromHeight, 80);\n\n    const xOffset = dom.image.output.width / 2;\n    const yOffset = dom.image.output.height / 2;\n    state.scaleCentreX = xOffset;\n    state.scaleCentreY = yOffset;\n\n    setEdgeLength(edge);\n    setXOffset(xOffset);\n    setYOffset(yOffset);\n}","import { SQRT3, calcHexHeight, calcHexWidth, adjustHexCentre } from './hex'\nimport { getEdgeLength, setEdgeLength, getXOffset, setXOffset, getYOffset, setYOffset, getEdgeLocked, getCanvasHeight, getCanvasWidth } from './controls'\nimport { onFileDropped, onFileSelected } from './import'\nimport state from './state'\nimport dom, {\n    updateBackgroundReference,\n    updateOutputReference,\n    updatePositionReferences,\n    updateEdgeReference,\n    updateFileSelectorReference,\n    updateExportButtonReference,\n    updateEdgeLockedReference,\n    updateHiddenImageReference,\n    updateDropzoneReference,\n    setupExportCanvas\n} from './dom'\nimport { drawHexOutline, redraw } from './draw'\n\nwindow.onload = () => {\n    updateBackgroundReference();\n    updateOutputReference();\n    updatePositionReferences();\n    updateEdgeReference();\n    updateFileSelectorReference();\n    updateExportButtonReference();\n    updateEdgeLockedReference();\n    updateDropzoneReference();\n    setupExportCanvas();\n\n    dom.image.output.addEventListener('mousemove', ({ clientX, clientY }) => {\n        const { left, top } = dom.image.output.getBoundingClientRect();\n        const mouseX = clientX - left;\n        const mouseY = clientY - top;\n\n        redraw();\n        drawHexOutline(dom.image.outputCanvas, mouseX, mouseY);\n    });\n\n    dom.image.output.addEventListener('click', ({ clientX, clientY }) => {\n        const { left, top } = dom.image.output.getBoundingClientRect();\n        const mouseX = clientX - left;\n        const mouseY = clientY - top;\n\n        state.scaleCentreX = mouseX;\n        state.scaleCentreY = mouseY;\n\n        const { x, y } = adjustHexCentre(mouseX, mouseY, getEdgeLength(), getCanvasWidth(), getCanvasHeight());\n\n        setXOffset(x);\n        setYOffset(y);\n\n        redraw();\n        drawHexOutline(dom.image.outputCanvas, mouseX, mouseY);\n    });\n\n    dom.image.output.addEventListener('mouseleave', () => {\n        redraw();\n    });\n\n    dom.image.output.addEventListener('wheel', (e) => {\n        e.preventDefault();\n\n        if (getEdgeLocked()) {\n            return;\n        }\n\n        let newEdgeLength = getEdgeLength() + e.deltaY * 0.5;\n        if (newEdgeLength < 0) {\n            newEdgeLength = 0;\n        }\n\n        setXOffset(state.scaleCentreX);\n        onXChanged(state.scaleCentreX);\n        setYOffset(state.scaleCentreY);\n        onYChanged(state.scaleCentreY);\n        setEdgeLength(newEdgeLength);\n        onEdgeChanged(newEdgeLength);\n    })\n\n    window.addEventListener('dragenter', function(e) {\n        dom.dropzone.style.visibility = \"visible\";\n    });\n\n    const validFile = () => true;\n\n    // display appropriate mouse style\n    dom.dropzone.addEventListener('dragenter', (e) => {\n        if (validFile()) { // Test that the item being dragged is a valid one\n            e.dataTransfer.dropEffect = 'move';\n            e.preventDefault();\n        }\n    })\n\n    // display appropriate mouse style\n    dom.dropzone.addEventListener('dragover', (e) => {\n        if (validFile()) { // Test that the item being dragged is a valid one\n            e.dataTransfer.dropEffect = 'move';\n            e.preventDefault();\n        }\n    })\n\n    dom.dropzone.addEventListener('drop', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        dom.dropzone.style.visibility = \"hidden\";\n        onFileDropped(e.dataTransfer.files[0]);\n    });\n\n    dom.dropzone.addEventListener('dragleave', (e) => {\n        dom.dropzone.style.visibility = \"hidden\";\n    });\n\n    dom.control.xCentre.addEventListener('change', e => onXChanged(parseFloat(dom.control.xCentre.value)));\n    dom.control.yCentre.addEventListener('change', e => onYChanged(parseFloat(dom.control.yCentre.value)));\n    dom.control.edge.addEventListener('change', e => onEdgeChanged(parseFloat(dom.control.edge.value)));\n    dom.control.fileSelector.addEventListener('change', e => onFileSelected(e.target.files[0]));\n    dom.control.exportButton.addEventListener('click', e => handleDownload(dom.control.exportButton));\n}\n\nfunction onXChanged(newXOffset) {\n    const canvasWidth = getCanvasWidth();\n    const edgeLength = getEdgeLength();\n    const hexWidth = calcHexWidth(edgeLength);\n    const edgeLocked = getEdgeLocked();\n\n    if (newXOffset < 0) {\n        newXOffset = 0;\n    } else if (newXOffset > canvasWidth) {\n        newXOffset = canvasWidth;\n    }\n\n    state.scaleCentreX = newXOffset;\n    const newHexLeft = newXOffset - hexWidth / 2;\n    const newHexRight = newXOffset + hexWidth / 2;\n\n    if (newHexLeft < 0) {\n        if (edgeLocked) {\n            setXOffset(hexWidth / 2);\n        } else {\n            setEdgeLength(newXOffset / (SQRT3 / 2));\n        }\n    } else if (newHexRight > canvasWidth) {\n        if (edgeLocked) {\n            setXOffset(canvasWidth - hexWidth / 2);\n        } else {\n            setEdgeLength((canvasWidth - newXOffset) / (SQRT3 / 2));\n        }\n    }\n\n    redraw();\n}\n\nfunction onYChanged(newYOffset) {\n    const canvasHeight = getCanvasHeight();\n    const edgeLength = getEdgeLength();\n    const hexHeight = calcHexHeight(edgeLength);\n    const edgeLocked = getEdgeLocked();\n\n    if (newYOffset < 0) {\n        newYOffset = 0;\n    } else if (newYOffset > canvasHeight) {\n        newYOffset = canvasHeight;\n    }\n\n    state.scaleCentreY = newYOffset;\n    const newHexTop = newYOffset - hexHeight / 2;\n    const newHexBottom = newYOffset + hexHeight / 2;\n\n    if (newHexTop < 0) {\n        if (edgeLocked) {\n            setYOffset(hexHeight / 2);\n        } else {\n            setEdgeLength(newYOffset);\n        }\n    } else if (newHexBottom > canvasHeight) {\n        if (edgeLocked) {\n            setYOffset(canvasHeight - hexHeight / 2)\n        } else {\n            setEdgeLength(canvasHeight - newYOffset);\n        }\n    }\n\n    redraw();\n\n    state.scaleCentreY = getYOffset();\n}\n\nfunction onEdgeChanged(newEdge) {\n    const canvasHeight = getCanvasHeight();\n    const canvasWidth = getCanvasWidth();\n\n    let cappedEdge = newEdge;\n    if (calcHexHeight(newEdge) > canvasHeight) {\n        cappedEdge = canvasHeight / 2;\n    }\n\n    if (calcHexWidth(cappedEdge) > canvasWidth) {\n        cappedEdge = canvasWidth / SQRT3;\n    }\n\n    if (cappedEdge !== newEdge) {\n        setEdgeLength(cappedEdge);\n    }\n\n    const xOffset = getXOffset();\n    const hexWidth = calcHexWidth(cappedEdge);\n    if (xOffset + hexWidth / 2 > canvasWidth) {\n        setXOffset(canvasWidth - hexWidth / 2);\n    } else if (xOffset - hexWidth / 2 < 0) {\n        setXOffset(hexWidth / 2);\n    }\n\n    const yOffset = getYOffset();\n    const hexHeight = calcHexHeight(cappedEdge);\n    if (yOffset + hexHeight / 2 > canvasHeight) {\n        setYOffset(canvasHeight - hexHeight / 2);\n    } else if (yOffset - hexHeight / 2 < 0) {\n        setYOffset(hexHeight / 2)\n    }\n\n    redraw();\n}\n\nfunction handleDownload(exporter) {\n    const edge = getEdgeLength();\n\n    if (edge === 0) {\n        alert('hex too small');\n        return;\n    }\n\n    const hexWidth = calcHexWidth(edge);\n    const hexHeight = calcHexHeight(edge);\n\n    dom.image.export.width = hexWidth;\n    dom.image.export.height = hexHeight;\n\n    const xOffset = getXOffset();\n    const yOffset = getYOffset();\n\n    const x = xOffset - hexWidth / 2;\n    const y = yOffset - hexHeight / 2;\n    dom.image.exportCanvas\n        .drawImage(dom.image.output, x, y, hexWidth, hexHeight, 0, 0, hexWidth, hexHeight);\n\n    exporter.href = dom.image.export.toDataURL('image/png');\n}"],"sourceRoot":""}